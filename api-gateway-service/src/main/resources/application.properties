#spring.application.name=api-gateway

# now this does the same thing as
# writing the client annoation for eureka @EnableEurekaClient
# but this is specifically for api-gateway
# so we gonna use this only

#spring.cloud.gateway.discovery.locator.enabled=true
# to enable  lower casing when defining the URI

#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
#logging.level.org.springframework.web = DEBUG

# Configuring the Services for our API Gateway

#defining the very first
#    spring.cloud.gateway.routes[0].id=product-service
#    spring.cloud.gateway.routes[0].uri=lb://product-service

#defining the path to route traffic to product service
# this is called as predicate

#  spring.cloud.gateway.routes[0].predicates[0]=Path=/product/**
#
#eureka.instance.instance-id=${spring.application.name}-${random.uuid}
#










server.port=8999
spring.application.name=api-gateway
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
#spring.cloud.loadbalancer.ribbon.enabled=false

spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/product
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

eureka.instance.instance-id=${spring.application.name}-${random.uuid}

debug=true


spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/microservices-project-realm
#
#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/microservices-project-realm
#spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=spring-cloud-gateway-client
#spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-secret=i1pBbKBx8Fm6edWYjTKoPIrLCWjIjxlo
#spring.security.oauth2.client.registration.spring-cloud-gateway-client.provider=keycloak
#spring.security.oauth2.client.registration.spring-cloud-gateway-client.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.spring-cloud-gateway-client.redirect-uri=http://localhost:8999/login/oauth2/code/spring-cloud-gateway-client
